Index: app/src/main/java/ro/bluebit/Incarca_Descarca_Trimiteri_Activity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ro.bluebit;\r\n\r\nimport android.content.ContentValues;\r\nimport android.content.DialogInterface;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.media.MediaPlayer;\r\nimport android.os.Bundle;\r\nimport android.os.Vibrator;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.AutoCompleteTextView;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.widget.Toolbar;\r\n\r\n\r\nimport ro.bluebit.Database.Constructor;\r\nimport ro.bluebit.Database.DatabaseHelper;\r\nimport ro.bluebit.UTILITARE.CustomTextWatcher;\r\nimport ro.bluebit.UTILITARE.LogicaVerificari;\r\nimport ro.bluebit.Diverse.Siruri;\r\n\r\nimport static java.lang.Long.parseLong;\r\n\r\n// import com.google.\r\n// actualizat activitatea de logare\r\npublic class Incarca_Descarca_Trimiteri_Activity extends BazaAppCompat {\r\n    EditText cod_bare1;\r\n    DatabaseHelper myDb;\r\n    Long[] stocareCodBareDinScanner;\r\n    String preiaCodBare1;\r\n    TextView afisareMesaj1, numarpachete;\r\n    public final String TAG = \"incarca_descarca\";\r\n    AutoCompleteTextView PunctDeLucru;\r\n    Button btn_adaug_manual;\r\n    EditText cod_bare2;\r\n    @Override\r\n    public void executalaHttpResponse(String sScop,String sRaspuns) {\r\n        super.executalaHttpResponse(sScop,sRaspuns);\r\n        if (sScop.equals(\"SINCRONIZARE_TRIMITERI\")) {\r\n            // sincrinizare date ce vin din din server\r\n            Log.d(sScop,\"start\");\r\n            myDb.sincronizare_trimiteri(sRaspuns);\r\n        } else if (sScop.equals(\"SINCRONIZARE_RECEPTIE\")) {\r\n            // sincronizare date create in aparat\r\n            myDb.sincronizare_receptie(sRaspuns);\r\n        }\r\n        //      stergeRaspuns(sScop);\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        LogicaVerificari.executaSincroNomenc(this) ;\r\n        LogicaVerificari.executaSincroTrimiteri(this);\r\n        LogicaVerificari.executaSincroRecTrimiteri(this);\r\n\r\n        setContentView(R.layout.layout_scan_cod_bare_afisare_pachete_ramase);\r\n        Bundle extras = getIntent().getExtras();\r\n        String preluareIntent = extras.getString(\"ACTIUNE\");\r\n        String id_utilizator = extras.getString(\"UTILIZATOR\");\r\n        PunctDeLucru = findViewById(R.id.ACTV1);\r\n        numarpachete = findViewById(R.id.TVnrObiectedeDescarcat);\r\n        btn_adaug_manual=findViewById(R.id.BTN_introduc_manual_codul);\r\n        adaug_manual_cod_bare();\r\n\r\n//        if (preluareIntent.equals(\"incarcare\")) {\r\n//            setContentView(R.layout.layout_scaneaza_cod_bare);}\r\n//        else{\r\n//            setContentView(R.layout.layout_scan_cod_bare_afisare_pachete_ramase);\r\n//\r\n//        }\r\n\r\n        myDb = new DatabaseHelper(this);\r\n        SQLiteDatabase db = myDb.getReadableDatabase();\r\n        cod_bare2= findViewById(R.id.cod_bare2);\r\n        cod_bare2.setEnabled(false);\r\n        cod_bare1 = findViewById(R.id.cod_bare1);\r\n        cod_bare1.setEnabled(true);\r\n        afisareMesaj1 = findViewById(R.id.reporter1);\r\n        Toolbar toolbarSimplu = findViewById(R.id.toolbarSimplu);\r\n        setSupportActionBar(toolbarSimplu);\r\n        TextWatcher watchCodBare = new CustomTextWatcher(cod_bare1, afisareMesaj1, preiaCodBare1, this);\r\n        cod_bare1.addTextChangedListener(watchCodBare);\r\n        if (preluareIntent.equals(\"incarcare\")) {\r\n            toolbarSimplu.setSubtitle(\"Incarca trimiteri:\");\r\n\r\n        } else {\r\n            toolbarSimplu.setSubtitle(\"Descarca trimiteri:\");\r\n\r\n        }\r\n        PopulareAutocomplete();\r\n\r\n        //     int testez=LogicaVerificari.iGetNumarDeCoduriBare(db,10);\r\n    }\r\n\r\n    public void AdauganrColete(){\r\n        if (cod_bare1.isEnabled()){\r\n            numarpachete.setText(\"Noooo\");\r\n            NumarPacheteDeDescarcat();\r\n        }\r\n        else  alertMesajValidari(\"oooooo\", \"nuuuuu, eroare de numarare\");\r\n\r\n    }\r\n\r\n    public void NumarPacheteDeDescarcat(){\r\n        myDb = new DatabaseHelper(Incarca_Descarca_Trimiteri_Activity.this);\r\n        SQLiteDatabase db = myDb.getReadableDatabase();\r\n        int numar=get_id_P_Lucru();\r\n        numarpachete.setText(Integer.toString( LogicaVerificari.iGetNumarDeCoduriBare(db,numar)));\r\n        // alertMesajValidari(\"oooooo\", \"nuuuuu\");\r\n    }\r\n\r\n    public void adaug_manual_cod_bare(){\r\n        btn_adaug_manual.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                switch (btn_adaug_manual.getText().toString()){\r\n                    case \"Introduc manual codul\":\r\n                        cod_bare2.setEnabled(true);\r\n                        cod_bare2.requestFocus();\r\n                        btn_adaug_manual.setText(\"Adauga codul\");\r\n                        break;\r\n                    case \"Adauga codul\":\r\n                        if(cod_bare2.length()<1){\r\n                            cod_bare2.getText().clear();\r\n\r\n                        }\r\n                        else{\r\n                            cod_bare1.setText(cod_bare2.getText().toString());\r\n                            cod_bare2.setText(\"\");\r\n                            btn_adaug_manual.setText(\"Introduc manual codul\");\r\n                            cod_bare1.requestFocus();\r\n                        }\r\n                        break;\r\n                }\r\n                NumarPacheteDeDescarcat();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    public int id_P_Lucru() {\r\n        DatabaseHelper myDb = new DatabaseHelper(this);\r\n        SQLiteDatabase db = myDb.getReadableDatabase();\r\n        String denumireplucru = getIntent().getExtras().getString(\"UserPL\");\r\n        int rezultatID = LogicaVerificari.getPunctLucru(db, PunctDeLucru.getText().toString().trim());\r\n        return rezultatID;\r\n    }\r\n    public   void alertMesajValidari(String title, String alert) {\r\n        final AlertDialog.Builder alertDialog = new AlertDialog.Builder(this);\r\n        alertDialog.setMessage(alert);\r\n        alertDialog.setTitle(title);\r\n        alertDialog.setCancelable(false);\r\n        alertDialog.setPositiveButton(\"Ok\",\r\n                new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        dialogInterface.dismiss();\r\n                    }\r\n                });\r\n        alertDialog.show();\r\n    }\r\n\r\n\r\n\r\n    public void alertaSunet() {\r\n        final MediaPlayer mp = MediaPlayer.create(this, R.raw.alarma);\r\n        mp.start();\r\n    }\r\n\r\n    public Vibrator vibration() {\r\n        final Vibrator v = (Vibrator) getSystemService(VIBRATOR_SERVICE);\r\n        final long[] pattern = {800, 300};\r\n        new Thread() {\r\n            @Override\r\n            public void run() {\r\n                for (int i = 0; i < pattern.length; i++) {\r\n                    v.vibrate(pattern, -1);\r\n                    try {\r\n                        Thread.sleep(3000);\r\n                    } catch (InterruptedException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }.start();\r\n        v.vibrate(pattern, -1);\r\n        return v;\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public void executalacodvalid(String sCodBare) {\r\n\r\n\r\n        super.executalacodvalid(sCodBare);\r\n\r\n        SQLiteDatabase db = myDb.getReadableDatabase();\r\n        //inlaturarea zerourilor din sirul de caractere\r\n        String codBareFaraZerouri = LogicaVerificari.RemoveZero(sCodBare);\r\n        //transformarea sirului de caractere in long\r\n        long codBareScurt = parseLong(codBareFaraZerouri);\r\n        //verificare existenta in plaja de coduri\r\n        boolean existInPlajaCoduri = LogicaVerificari.verificareExistentaInPlajaDeCoduri(db, codBareScurt);\r\n\r\n        int existInIncarcDescarc = LogicaVerificari.getExistentaIncDesc(db, sCodBare);\r\n\r\n        //verificarea existentei inregistrarii in tabela Antet  Trimiteri\r\n        boolean existInAntetTrimiteri = LogicaVerificari.verificareExistentaInAntetTrimiteri(db, sCodBare);\r\n//        String sQueryExistinAntet = (\"select *  from v_verifica_in_trimiteri where '\" + sCodBare + \"'=cod_bare\");\r\n\r\n        String sQueryExInAntet = (\" select \" + Constructor.Tabela_Antet_Trimiteri.COL_ID_ANTET_TRIMITERI + \" from \" +\r\n                Constructor.Tabela_Antet_Trimiteri.NUME_TABEL +\r\n                \" where '\" + sCodBare + \"' = \" + Constructor.Tabela_Antet_Trimiteri.COL_COD_BARE);\r\n        Bundle extras = getIntent().getExtras();\r\n        String preluareIntent = extras.getString(\"ACTIUNE\");\r\n\r\n        if (!existInPlajaCoduri) {\r\n            Toast.makeText(this, \"Codul de bare \" + sCodBare + \"nu exista in lotul de coduri\", Toast.LENGTH_SHORT).show();\r\n            Toast.makeText(this, \"Corectati codul sau introduceti unul nou\", Toast.LENGTH_SHORT).show();\r\n            alertMesajValidari(\"Cod Inexistent\", \"Nu face parte din codurile noastre\");\r\n            vibration();\r\n            alertaSunet();\r\n            cod_bare1.setText(\"\");\r\n        }\r\n        if (existInPlajaCoduri && !existInAntetTrimiteri) {\r\n            alertMesajValidari(\"Cod Nou!\", \"Codul nu a fost folosit pentru o trimitere noua! \");\r\n            vibration();\r\n            alertaSunet();\r\n            cod_bare1.setText(\"\");\r\n        }\r\n        if (existInPlajaCoduri && existInAntetTrimiteri && preluareIntent.equals(\"incarcare\")) {\r\n            if (existInIncarcDescarc==4) {\r\n                Toast.makeText(this, \"Ai realizat o incarcare noua\", Toast.LENGTH_LONG).show();\r\n                metodaIncarca(sCodBare);\r\n                cod_bare1.getText().clear();\r\n            }\r\n            else {\r\n\r\n                Toast.makeText(this, \"Codul a mai fost incarcat\", Toast.LENGTH_LONG).show();\r\n                cod_bare1.getText().clear();\r\n\r\n            }\r\n        }\r\n\r\n        if (existInPlajaCoduri && existInAntetTrimiteri && preluareIntent.equals(\"descarcare\")) {\r\n            if (existInIncarcDescarc==3) {\r\n                // alertMesajValidari(\"Cod\", \"Codul a  fost descarcat\");\r\n\r\n                Toast.makeText(this, \"codul a  fost descarcat \", Toast.LENGTH_LONG).show();\r\n                metodaDescarca(sCodBare);\r\n                cod_bare1.getText().clear();\r\n            }else {\r\n                alertMesajValidari(\"Atentie!\", \"Codul a mai fost descarcat\");\r\n                // Toast.makeText(this, \"codul a mai fost  descarcat \", Toast.LENGTH_SHORT).show();\r\n                cod_bare1.getText().clear();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public void metodaIncarca(String sCodBare) {\r\n        String id_utilizator = (Incarca_Descarca_Trimiteri_Activity.this).getIntent().getExtras().getString(\"UTILIZATOR\");\r\n\r\n        SQLiteDatabase db = myDb.getWritableDatabase();\r\n        int abc = LogicaVerificari.getId_Antet_Trimiteri(db, sCodBare);\r\n        db.beginTransaction();\r\n\r\n        ContentValues cval = new ContentValues();\r\n        cval.put(Constructor.Tabela_Incarc_Descarc_Alt.COL_ID_ANTET_TRIMITERI, abc);\r\n        cval.put(Constructor.Tabela_Incarc_Descarc_Alt.COL_ID_UTILIZATOR, id_utilizator);\r\n        cval.put(Constructor.Tabela_Incarc_Descarc_Alt.COL_ID_TIP, 3);\r\n        cval.put(Constructor.Tabela_Incarc_Descarc_Alt.COL_ID_P_LUCRU, get_id_P_Lucru());\r\n        cval.put(Constructor.Tabela_Incarc_Descarc_Alt.COL_DATA, Siruri.ttos(Siruri.getDateTime()));\r\n        db.insert(Constructor.Tabela_Incarc_Descarc_Alt.NUME_TABEL, null, cval);\r\n        db.setTransactionSuccessful();\r\n        db.endTransaction();\r\n        LogicaVerificari.executaSincroNomenc(this) ;\r\n        LogicaVerificari.executaSincroTrimiteri(this);\r\n        LogicaVerificari.executaSincroRecTrimiteri(this);\r\n        NumarPacheteDeDescarcat();// adaugat ulterior la metoda pt a numara corect nr pachete ramase\r\n    }\r\n\r\n    public void metodaDescarca(String sCodBare) {\r\n        String id_utilizator = (Incarca_Descarca_Trimiteri_Activity.this).getIntent().getExtras().getString(\"UTILIZATOR\");\r\n\r\n        SQLiteDatabase db = myDb.getWritableDatabase();\r\n        int abc = LogicaVerificari.getId_Antet_Trimiteri(db, sCodBare);\r\n        db.beginTransaction();\r\n\r\n        ContentValues cval = new ContentValues();\r\n        cval.put(Constructor.Tabela_Incarc_Descarc_Alt.COL_ID_UTILIZATOR, id_utilizator);\r\n        cval.put(Constructor.Tabela_Incarc_Descarc_Alt.COL_ID_ANTET_TRIMITERI, abc);\r\n        cval.put(Constructor.Tabela_Incarc_Descarc_Alt.COL_ID_TIP, 4);\r\n        cval.put(Constructor.Tabela_Incarc_Descarc_Alt.COL_ID_P_LUCRU, get_id_P_Lucru());\r\n        cval.put(Constructor.Tabela_Incarc_Descarc_Alt.COL_DATA, Siruri.ttos(Siruri.getDateTime()));\r\n\r\n        db.insert(Constructor.Tabela_Incarc_Descarc_Alt.NUME_TABEL, null, cval);\r\n        db.setTransactionSuccessful();\r\n        db.endTransaction();\r\n        // sincronizare\r\n        LogicaVerificari.executaSincroNomenc(this) ;\r\n        LogicaVerificari.executaSincroTrimiteri(this);\r\n        LogicaVerificari.executaSincroRecTrimiteri(this);\r\n        NumarPacheteDeDescarcat();// adaugat ulterior la metoda pt a numara corect nr pachete ramase\r\n    }\r\n\r\n    public void PopulareAutocomplete() {\r\n        DatabaseHelper myDb = new DatabaseHelper(this);\r\n        SQLiteDatabase db = myDb.getWritableDatabase();\r\n        final String[] Expeditor_Destinatar = LogicaVerificari.getPlucru(db);\r\n        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, R.layout.support_simple_spinner_dropdown_item, Expeditor_Destinatar);\r\n\r\n        adapter.setDropDownViewResource(R.layout.support_simple_spinner_dropdown_item);\r\n        PunctDeLucru.setAdapter(adapter);\r\n        PunctDeLucru.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(AdapterView<?> parent,  View view, int i, long l) {\r\n\r\n                Object item = parent.getItemAtPosition(i);\r\n                String selectedItem = (String) parent.getItemAtPosition(i);\r\n                if (item==selectedItem){\r\n                    cod_bare1.setEnabled(true);\r\n                    cod_bare1.requestFocus();\r\n                    NumarPacheteDeDescarcat();\r\n\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public int get_id_P_Lucru() {\r\n        SQLiteDatabase db = myDb.getReadableDatabase();\r\n        int rezultatID = LogicaVerificari.getPunctLucru(db, PunctDeLucru.getText().toString());\r\n        return rezultatID;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/ro/bluebit/Incarca_Descarca_Trimiteri_Activity.java	(revision 0695081a01b04c03e30bae47687a61ee380cb349)
+++ app/src/main/java/ro/bluebit/Incarca_Descarca_Trimiteri_Activity.java	(date 1629219122762)
@@ -5,6 +5,7 @@
 import android.database.sqlite.SQLiteDatabase;
 import android.media.MediaPlayer;
 import android.os.Bundle;
+import android.os.Environment;
 import android.os.Vibrator;
 import android.text.TextWatcher;
 import android.util.Log;
@@ -21,12 +22,22 @@
 import androidx.appcompat.widget.Toolbar;
 
 
+import java.io.BufferedWriter;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.nio.channels.FileChannel;
+
 import ro.bluebit.Database.Constructor;
 import ro.bluebit.Database.DatabaseHelper;
 import ro.bluebit.UTILITARE.CustomTextWatcher;
 import ro.bluebit.UTILITARE.LogicaVerificari;
 import ro.bluebit.Diverse.Siruri;
 
+import static android.os.Environment.DIRECTORY_DOWNLOADS;
 import static java.lang.Long.parseLong;
 
 // import com.google.
@@ -72,6 +83,8 @@
         btn_adaug_manual=findViewById(R.id.BTN_introduc_manual_codul);
         adaug_manual_cod_bare();
 
+
+
 //        if (preluareIntent.equals("incarcare")) {
 //            setContentView(R.layout.layout_scaneaza_cod_bare);}
 //        else{
@@ -98,10 +111,51 @@
 
         }
         PopulareAutocomplete();
+        writeFile("am reusit");
+
 
         //     int testez=LogicaVerificari.iGetNumarDeCoduriBare(db,10);
     }
 
+    //  creare fisier txt in memoria interna
+
+
+
+
+    public void writeFile(String text){
+
+            File tarjeta = Environment.getExternalStorageDirectory();
+            //File tarjeta = data/data/<ro.bluebit>/;
+            //File tarjeta = Environment.getDataDirectory();
+           File logFile = new File(tarjeta.getAbsolutePath()+"/", "log.txt");
+
+            if (!logFile.exists())
+            {
+                try
+                {
+                    logFile.createNewFile();
+                }
+                catch (IOException e)
+                {
+                    // TODO Auto-generated catch block
+                    e.printStackTrace();
+                }
+            }
+            try
+            {
+                //BufferedWriter for performance, true to set append to file flag
+                BufferedWriter buf = new BufferedWriter(new FileWriter(logFile, true));
+                buf.append(text);
+                buf.newLine();
+                buf.close();
+            }
+            catch (IOException e)
+            {
+                // TODO Auto-generated catch block
+                e.printStackTrace();
+            }
+        }
+
     public void AdauganrColete(){
         if (cod_bare1.isEnabled()){
             numarpachete.setText("Noooo");
@@ -143,7 +197,7 @@
                         }
                         break;
                 }
-                NumarPacheteDeDescarcat();
+               NumarPacheteDeDescarcat();
             }
         });
     }
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"delegatedBuild\" value=\"false\" />\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision 0695081a01b04c03e30bae47687a61ee380cb349)
+++ .idea/gradle.xml	(date 1629099114855)
@@ -15,6 +15,7 @@
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
+        <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
   </component>
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_7\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 0695081a01b04c03e30bae47687a61ee380cb349)
+++ .idea/misc.xml	(date 1629099114817)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
